package 代码库.笔试为主.数组矩阵;

/*
在4x4的棋盘上摆满了黑白棋子，黑白两色的位置和数目随机其中左上角坐标为(1,1),
右下角坐标为(4,4),现在依次有一些翻转操作，要对一些给定支点坐标为中心的上下左右
四个棋子的颜色进行翻转，请计算出翻转后的棋盘颜色。

给定两个数组A和f,分别为初始棋盘和翻转位置。其中翻转位置共有3个。请返回翻转后的棋盘。

测试样例：
[[0,0,1,1],[1,0,1,0],[0,1,1,0],[0,0,1,0]],[[2,2],[3,3],[4,4]]
返回：[[0,1,1,1],[0,0,1,0],[0,1,1,0],[0,0,1,0]]
 */
public class 棋子翻转 {
    public int[][] flipChess(int[][] A, int[][] f) {
        for (int i = 0; i < 3; i++) {
            int a = f[i][0] - 1;
            int b = f[i][1] - 1;
            if (a - 1 >= 0) {
                change(A, a - 1, b);//不调用函数的话可以用A[a-1][b]=(A[a-1][b]==0?1:0);
            }
            if (a + 1 < A[0].length) {
                change(A, a + 1, b);
            }
            if (b - 1 >= 0) {
                change(A, a, b - 1);
            }
            if (b + 1 < A.length) {
                change(A, a, b + 1);
            }

        }
        return A;
    }

    public void change(int[][] A, int a, int b) {
        if (A[a][b] == 0) {
            A[a][b] = 1;
        } else {
            A[a][b] = 0;
        }

    }

}
